#!/bin/bash

# Pre-commit hook to clean whitespace
# This script will clean whitespace and include it in the commit

set -e

echo "üîç Running pre-commit checks..."

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

# Check if we're in the right directory
if [ ! -f "action.yml" ] || [ ! -d "src" ]; then
    print_error "This doesn't appear to be the contrast-ai-smartfix-action repository root"
    exit 1
fi

# Clean trailing whitespace from staged files
echo ""
print_info "Cleaning trailing whitespace from staged files..."

# Get list of staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

if [ -n "$STAGED_FILES" ]; then
    echo "üìÅ Processing staged files:"
    echo "$STAGED_FILES" | sed 's/^/  /'
    
    WHITESPACE_CLEANED=false
    
    # Apply sed command to each staged file
    for file in $STAGED_FILES; do
        if [ -f "$file" ]; then
            echo "  üßπ Cleaning whitespace in: $file"
            # Clean trailing whitespace
            sed -i '' 's/[[:space:]]*$//' "$file"
            # Re-stage the file with cleaned whitespace
            git add "$file"
            WHITESPACE_CLEANED=true
        fi
    done
    
    if [ "$WHITESPACE_CLEANED" = true ]; then
        print_success "Whitespace cleanup completed and re-staged!"
    else
        print_info "No files needed whitespace cleanup"
    fi
else
    print_info "No staged files detected for whitespace cleanup"
fi

echo ""
print_success "All pre-commit checks completed successfully!"
echo "‚ú® Commit proceeding..."

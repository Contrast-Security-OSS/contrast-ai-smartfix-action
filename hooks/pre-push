#!/bin/bash

# Pre-push hook to run Python linting
# This script will block the push if linting fails

set -e

echo "🔍 Running pre-push checks..."

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_error() {
    echo -e "${RED}❌ $1${NC}"
}

print_success() {
    echo -e "${GREEN}✅ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}⚠️  $1${NC}"
}

print_info() {
    echo -e "${BLUE}ℹ️  $1${NC}"
}

# Check if we're in the right directory
if [ ! -f "action.yml" ] || [ ! -d "src" ]; then
    print_error "This doesn't appear to be the contrast-ai-smartfix-action repository root"
    exit 1
fi

# Run Python linting
echo ""
print_info "Running Python linter..."

# Check if flake8 is installed, if not try to install it
if ! command -v flake8 &> /dev/null; then
    print_warning "flake8 not found. Attempting to install..."
    if command -v pip &> /dev/null; then
        pip install flake8
    elif command -v pip3 &> /dev/null; then
        pip3 install flake8
    else
        print_error "Neither pip nor pip3 found. Please install flake8 manually:"
        print_error "pip install flake8"
        exit 1
    fi
fi

# Find all Python files in src/ and test/ directories
PYTHON_FILES=$(find src/ test/ -name "*.py" 2>/dev/null || true)

if [ -z "$PYTHON_FILES" ]; then
    print_warning "No Python files found in src/ or test/ directories"
    exit 0
fi

echo "📁 Found Python files:"
echo "$PYTHON_FILES" | sed 's/^/  /'

# Run flake8 on the Python files
echo ""
echo "🧹 Running flake8 linter..."

if flake8 $PYTHON_FILES; then
    print_success "All Python files passed linting!"
    echo ""
    print_success "Pre-push linting check completed successfully!"
    echo "🚀 Push proceeding..."
    exit 0
else
    echo ""
    print_error "Linting failed! Push blocked."
    echo ""
    echo "💡 To fix linting issues:"
    echo "   1. Review the errors above"
    echo "   2. Fix the issues in your code"
    echo "   3. Commit your fixes"
    echo "   4. Try pushing again"
    echo ""
    echo "🔧 To skip all pre-push checks (not recommended):"
    echo "   git push --no-verify"
    echo ""
    exit 1
fi
